openapi: "3.0.0"
info:
  version: 1.0.0
  title: 'some title with <script>alert("You are Hacked");</script> eval('
paths:
  /pet:
    post:
      summary: "Add a new pet to the store"
      operationId: "add_pet"
      tags:
        - pets
      requestBody:
        description: "Pet object that needs to be added to the store"
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        204:
          description: "Success"
        405:
          description: "Invalid input"
        default:
          description: "Invalid input"
    put:
      summary: "Update an existing pet"
      description: "put new data for existing pet"
      operationId: "update_pet"
      requestBody:
        description: "Pet object that needs to be added to the store"
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        204:
          description: "Success"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Pet not found"
        405:
          description: "Validation exception"
        default:
          description: "Error"
  /pet/{pet_id}:
    get:
      tags:
        - pets
      summary: Find pet by ID
      description: Returns a single pet
      operationId: get_pet_by_id
      parameters:
        - name: pet_id
          in: path
          description: ID of pet to return
          required: true
          schema:
            type: integer
            format: int64
        - name: pet_id
          in: path
          description: ID of pet to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
        default:
          description: "Invalid input"
  /given/another/:
    post:
      summary: "bad path"
      operationId: "trailing_slash"
      tags:
        - pets
      requestBody:
        description: "Pet object that needs to be added to the store"
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TheBadModel'
            example:
              number_of_connectors: 3
      responses:
        204:
          description: "Success"
        405:
          description: "Invalid input"
        default:
          description: "Invalid input"
  /path1:
    post:
      summary: "bad examples values"
      operationId: "bad_examples_values"
      tags:
        - pets
      requestBody:
        description: "Pet object that needs to be added to the store"
        required: true
        content:
          application/json:
            schema:
              type: object
            examples:
              foo:
                summary: A foo example
                value: {"foo": "bar"}
                externalValue: 'http://example.org/foo.json'
      responses:
        204:
          description: "Success"
        405:
          description: "Invalid input"
        default:
          description: "Invalid input"
  /path2:
    post:
      summary: "operation with a bad schema example"
      operationId: "bad_schema_example"
      tags:
        - pets
      requestBody:
        description: "Pet object that needs to be added to the store"
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelWithBadExample'
      responses:
        204:
          description: "Success"
        405:
          description: "Invalid input"
        default:
          description: "Invalid input"
components:
  schemas:
    ModelWithBadExample:
      type: object
      description: A bad example model
      properties:
        number_of_coins:
          type: integer
          description: The number of extension points.
      example:
          number_of_coins: 'testString'
    Pet:
      type: object
      description: pet object
      properties:
        pet_id:
          description: pet_id
          type: integer
          format: int64
          example: 10
        name:
          description: pet name
          type: string
          example: doggie
    TheBadModel:
      type: object
      description: The bad model
      properties:
        number_of_connectors:
          type: integer
          description: The number of extension points.
          enum:
            - 1
            - 2
            - a_string
            - 8