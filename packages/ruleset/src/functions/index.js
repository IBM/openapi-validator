module.exports = {
  arrayOfArrays: require('./array-of-arrays'),
  arrayResponses: require('./array-responses'),
  binarySchemas: require('./binary-schemas'),
  checkMajorVersion: require('./check-major-version'),
  circularRefs: require('./circular-refs'),
  descriptionMentionsJSON: require('./description-mentions-json'),
  disallowedHeaderParameter: require('./disallowed-header-parameter'),
  discriminator: require('./discriminator'),
  duplicatePathParameter: require('./duplicate-path-parameter'),
  enumCaseConvention: require('./enum-case-convention'),
  errorResponseSchema: require('./error-response-schema'),
  inlineResponseSchema: require('./inline-response-schema'),
  operationIdCaseConvention: require('./operation-id-case-convention'),
  operationIdNamingConvention: require('./operation-id-naming-convention'),
  operationSummary: require('./operation-summary'),
  paginationStyle: require('./pagination-style'),
  parameterCaseConvention: require('./parameter-case-convention'),
  parameterDefault: require('./parameter-default'),
  parameterDescription: require('./parameter-description'),
  parameterOrder: require('./parameter-order'),
  pathSegmentCaseConvention: require('./path-segment-case-convention'),
  propertyCaseCollision: require('./property-case-collision'),
  propertyCaseConvention: require('./property-case-convention'),
  propertyDescription: require('./property-description'),
  propertyInconsistentNameAndType: require('./property-inconsistent-name-and-type'),
  refPattern: require('./ref-pattern'),
  requestBodyName: require('./request-body-name'),
  requiredProperty: require('./required-property'),
  responseExampleProvided: require('./response-example-provided'),
  responseStatusCodes: require('./response-status-codes'),
  schemaDescription: require('./schema-description.js'),
  schemaOrContentProvided: require('./schema-or-content-provided'),
  securitySchemes: require('./security-schemes').securitySchemes,
  stringBoundary: require('./string-boundary'),
  unusedTag: require('./unused-tag').unusedTag,
  validTypeFormat: require('./valid-type-format')
};
