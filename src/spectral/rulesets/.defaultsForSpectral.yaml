extends: spectral:oas
functionsDir: './ibm-oas'
functions:
  - check-major-version
  - error-response-schema
  - required-property
  - response-example-provided
  - schema-or-content-provided
  - string-boundary
rules:

  # Original list created from Spectral with:
  # jq -r '.rules | to_entries | .[] | select(.value.recommended != false) | "  \(.key): off"' src/rulesets/oas/index.json

  # Turn off -- duplicates no_success_response_codes
  operation-2xx-response: off
  # Enable with same severity as Spectral
  oas2-operation-formData-consume-check: true
  # Enable with same severity as Spectral
  operation-operationId-unique: true
  # Enable with same severity as Spectral
  operation-parameters: true
  # Enable with same severity as Spectral
  operation-tag-defined: true
  # Turn off - duplicates missing_path_parameter
  path-params: off
  # Turn off - exclude from ibm:oas
  info-contact: off
  # Turn off - exclude from ibm:oas
  info-description: off
  # Enable with same severity as Spectral
  no-eval-in-markdown: true
  # Enable with same severity as Spectral
  no-script-tags-in-markdown: true
  # Enable with same severity as Spectral
  openapi-tags: true
  # Enable with same severity as Spectral
  operation-description: true
  # Turn off - duplicates operation_id_case_convention, operation_id_naming_convention
  operation-operationId: off
  # Turn off - duplicates operation_id_case_convention
  operation-operationId-valid-in-url: off
  # Enable with same severity as Spectral
  operation-tags: true
  # Turn off - duplicates missing_path_parameter
  path-declarations-must-exist: off
  # Enable with same severity as Spectral
  path-keys-no-trailing-slash: true
  # Enable with same severity as Spectral
  path-not-include-query: true
  # Turn off - duplicates $ref_siblings (off by default)
  no-$ref-siblings: off
  # Enable with same severity as Spectral
  typed-enum: true
  # Enable with same severity as Spectral
  oas2-api-host: true
  # Enable with same severity as Spectral
  oas2-api-schemes: true
  # Enable with same severity as Spectral
  oas2-host-trailing-slash: true
  # Turn off - dupicates non-configurable validation - security-ibm.js
  oas2-operation-security-defined: off
  # Turn off
  oas2-valid-parameter-example: off
  # Enable with warn severity
  oas2-valid-definition-example: warn
  # Turn off
  oas2-valid-response-example: off
  # Turn off
  oas2-valid-response-schema-example: off
  # Enable with same severity as Spectral
  oas2-anyOf: true
  # Enable with same severity as Spectral
  oas2-oneOf: true
  # Turn off
  oas2-schema: off
  # Turn off - duplicates non-configurable validation in base validator
  oas2-unused-definition: off
  # Enable with same severity as Spectral
  oas3-api-servers: true
  # Enable with same severity as Spectral
  oas3-examples-value-or-externalValue: true
  # Turn off - dupicates non-configurable validation - security-ibm.js
  oas3-operation-security-defined: off
  # Enable with same severity as Spectral
  oas3-server-trailing-slash: true
  # Turn off
  oas3-valid-oas-parameter-example: off
  # Turn off
  oas3-valid-oas-header-example: off
  # Enable with warn severity
  oas3-valid-oas-content-example: warn
  # Turn off
  oas3-valid-parameter-schema-example: off
  # Turn off
  oas3-valid-header-schema-example: off
  # Enable with warn severity
  oas3-valid-schema-example: warn
  # Enable with same severity as Spectral
  oas3-schema: true
  # Turn off - duplicates non-configurable validation in base validator
  oas3-unused-components-schema: off

  # custom Spectral rule to ensure request bodies and non-204 responses provide content object
  content-entry-provided:
    description: Request bodies and non-204 responses should define a content object
    given:
    - $.paths[*][*].responses[?(@property != '204' && @property != '202' && @property != '101')]
    - $.paths[*][*].requestBody
    severity: warn
    formats: ["oas3"]
    resolved: true
    then:
      field: content
      function: truthy
  # custom Spectral rule to ensure content object contains schema
  content-entry-contains-schema:
    description: Content entries must specify a schema
    given:
    - $.paths[*].[post,put,patch].requestBody.content[*]
    - $.paths[*].[get,post,put,patch,delete].[parameters,responses][*].content[*]
    severity: warn
    resolved: true
    then:
      field: schema
      function: truthy
  # custom Spectral rule to warn for */*
  ibm-content-type-is-specific:
    description: '*/* should only be used when all content types are supported'
    formats: ["oas3"]
    severity: warn
    resolved: true
    message: "{{description}}"
    given:
    - $.paths[*][*][parameters,responses][*].content
    - $.paths[*][*][requestBody].content
    then:
      field: '*/*'
      function: falsy
  # custom Spectral rule to warn for error response without application/json content
  ibm-error-content-type-is-json:
    description: 'error response should support application/json'
    formats: ["oas3"]
    severity: warn
    resolved: true
    message: "{{description}}"
    given: $.paths[*][*].responses[?(@property >= 400 && @property < 600)].content
    then:
      field: 'application/json'
      function: truthy
  # custom Spectral rule to ensure valid x-sdk-operations schema
  ibm-sdk-operations:
    message: "{{error}}"
    given: $.
    severity: warn
    formats: ["oas3"]
    resolved: true
    then:
      function: schema
      functionOptions:
        schema:
          $ref: './schemas/x-sdk-operations.json'
  # ensure major version is in path
  major-version-in-path:
    description: 'All paths must contain the API major version as a distinct path segment'
    message: "{{error}}"
    formats: ["oas2", "oas3"]
    given: $
    severity: warn
    then:
      function: check-major-version
  # ensure required properties are in the schema
  missing-required-property:
    description: 'A required property is not in the schema'
    message: "{{error}}"
    formats: ["oas2", "oas3"]
    given:
    - $.paths[*][*][parameters][*].schema
    - $.paths[*][*][parameters,responses][*].content[*].schema
    - $.paths[*][*][requestBody].content[*].schema
    severity: error
    then:
      function: required-property
  # ensure parameter contains schema
  parameter-schema-or-content:
    description: 'Parameter must provide either a schema or content'
    message: "{{error}}"
    severity: error
    formats: ["oas3"]
    resolved: true
    given: $.paths[*][*].parameters[*]
    then:
      function: schema-or-content-provided
  # ensure error response has content
  response-error-response-schema:
    message: "{{error}}"
    given: $.paths[*][*].responses[?(@property >= 400 && @property < 600)].content[*].schema
    severity: warn
    formats: ["oas3"]
    resolved: true
    then:
      function: error-response-schema
  # custom Spectral rule to ensure response example provided
  response-example-provided:
    message: "{{error}}"
    given: $.paths[*][*].responses[?(@property >= 200 && @property < 300)].content.application/json
    severity: warn
    resolved: true
    then:
      function: response-example-provided
  # ensure requestBody is an object
  request-body-object:
    description: "All request bodies MUST be structured as an object"
    given: $.paths[*][*].requestBody.content[*].schema
    severity: error
    then:
      field: type
      function: enumeration
      functionOptions:
        values:
        - object
  # ensure string has explicit boundaries
  string-boundary:
    description: 'string schemas should have explicit boundaries defined'
    message: "{{error}}"
    severity: warn
    formats: ["oas3"]
    resolved: true
    given:
    - $.paths[*][*][parameters][*].schema
    - $.paths[*][*][parameters][*].content[*].schema
    - $.paths[*][*].requestBody.content[*].schema
    then:
      function: string-boundary

  # ensure server variable has default value
  server-variable-default-value:
    description: 'Server variable should have default value'
    message: "{{description}}"
    severity: warn
    resolved: false
    formats: ["oas3"]
    given:
      - $.servers[*][variables][*][default]
    then:
      function: truthy
